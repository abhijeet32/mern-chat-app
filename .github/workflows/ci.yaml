name: chat-app
on: push

env:
    DATABASE_URI: ${{secrets.DATABASE_URI}}
    JWT_SECRET: ${{secrets.JWT_SECRET}}

jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Build the app
          run:  npm run build

    code-quality:
      needs: Build
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run SonarQube Scanner
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: app/src
          args: >
            -Dsonar.projectKey=${{secrets.PROJECT_KEY}}
            -Dsonar.organization=${{secrets.ORG_KEY}}

        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

    Build-Docker-Image:
      needs: code-quality
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/chat-app:${{github.run_id}}

    security-scan:
      needs: Build-Docker-Image
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        uses: aquasecurity/trivy-action@0.3.0
        with:
          scan-type: 'image'
          image-ref: '${{secrets.DOCKER_USERNAME}}/chat-app:${{github.run_id}}'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true      